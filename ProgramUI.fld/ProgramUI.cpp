// generated by Fast Light User Interface Designer (fluid) version 1.0305

#include "ProgramUI.h"

Fl_Menu_Item MainWindow::menu_[] = {
 {"Manage account", 0,  0, 0, 64, (uchar)FL_NORMAL_LABEL, 0, 15, 0},
 {"Create account", 0,  (Fl_Callback*)CreateAcc_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 13, 0},
 {"Save", 0,  (Fl_Callback*)SaveAcc_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 13, 0},
 {"Delete Acc", 0,  (Fl_Callback*)CreateAcc_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 13, 0},
 {0,0,0,0,0,0,0,0,0},
 {"Help", 0,  (Fl_Callback*)Help_cb, 0, 0, (uchar)FL_NORMAL_LABEL, 0, 15, 0},
 {0,0,0,0,0,0,0,0,0}
};

void MainWindow::hide() {
  mainwindow->hide();
}

void MainWindow::show() {
  mainwindow->show();
}

/**
 function that creates the window,
 i put a function to show in the end,
 so i dont need to ask to show in the main file.
*/
Fl_Double_Window* MainWindow::make() {
  { mainwindow = new Fl_Double_Window(1015, 655, "My Organizer");
    mainwindow->tooltip("App for keeping your life organized.");
    mainwindow->callback((Fl_Callback*)WinQuit_cb, (void*)(this));
    mainwindow->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    { Fl_Menu_Bar* o = new Fl_Menu_Bar(0, 0, 1455, 40);
      o->labelsize(11);
      o->textsize(11);
      o->menu(menu_);
    } // Fl_Menu_Bar* o
    { Fl_Tabs* o = new Fl_Tabs(25, 215, 965, 430);
      o->labeltype(FL_ENGRAVED_LABEL);
      o->labelsize(32);
      o->align(Fl_Align(FL_ALIGN_TOP_RIGHT));
      { Fl_Group* o = new Fl_Group(25, 255, 960, 375, "Calendar");
        o->labelsize(15);
        o->hide();
        { Fl_Button* o = new Fl_Button(105, 365, 290, 115, "button 1");
          o->labelsize(32);
          o->callback((Fl_Callback*)CButton1_cb);
        } // Fl_Button* o
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(25, 255, 965, 375, "To do list");
        o->box(FL_BORDER_BOX);
        o->labelsize(15);
        o->align(Fl_Align(FL_ALIGN_TOP_RIGHT));
        { Display = new Fl_Text_Display(55, 280, 900, 255);
          buff = new Fl_Text_Buffer;
          Display->buffer(buff);
        } // Fl_Text_Display* Display
        { Fl_Button* o = new Fl_Button(365, 560, 140, 45, "Add");
          o->labelsize(20);
          o->callback((Fl_Callback*)TDAdd_cb);
        } // Fl_Button* o
        { Fl_Button* o = new Fl_Button(575, 560, 140, 45, "Edit");
          o->labelsize(20);
          o->callback((Fl_Callback*)TDEdit_cb);
        } // Fl_Button* o
        { Fl_Button* o = new Fl_Button(790, 560, 140, 45, "Delete");
          o->labelsize(20);
          o->callback((Fl_Callback*)TDDelete_cb);
        } // Fl_Button* o
        { ToDoNumber = new Fl_Value_Input(165, 571, 175, 24, "ToDo number");
        } // Fl_Value_Input* ToDoNumber
        o->end();
      } // Fl_Group* o
      { Fl_Group* o = new Fl_Group(25, 255, 965, 390, "Finances");
        o->box(FL_BORDER_BOX);
        o->labelsize(15);
        o->align(Fl_Align(FL_ALIGN_TOP_RIGHT));
        o->hide();
        { Fl_Button* o = new Fl_Button(735, 500, 215, 95, "button 3");
          o->labelsize(32);
          o->callback((Fl_Callback*)FButton3_cb);
        } // Fl_Button* o
        o->end();
        Fl_Group::current()->resizable(o);
      } // Fl_Group* o
      o->end();
      Fl_Group::current()->resizable(o);
    } // Fl_Tabs* o
    mainwindow->end();
  } // Fl_Double_Window* mainwindow
  mainwindow->show();
  return mainwindow;
}

void CreateAccountWindow::hide() {
  createaccountwindow->hide();
}

void CreateAccountWindow::show() {
  createaccountwindow->show();
}

/**
 function that creates the window,
 i put a function to show in the end,
 so i dont need to ask to show in the main file.
*/
Fl_Double_Window* CreateAccountWindow::make() {
  { createaccountwindow = new Fl_Double_Window(575, 470, "Create Account");
    createaccountwindow->tooltip("Enter your data");
    createaccountwindow->user_data((void*)(this));
    createaccountwindow->align(Fl_Align(FL_ALIGN_TOP_LEFT));
    { Display = new Fl_Text_Display(105, 20, 365, 135);
      Fl_Group::current()->resizable(Display);
      buff = new Fl_Text_Buffer;
      Display->buffer(buff);
    } // Fl_Text_Display* Display
    { Fl_Group* o = new Fl_Group(10, 175, 550, 225, "Account details");
      { NameIn = new Fl_Input(72, 195, 175, 24, "Name:");
        NameIn->tooltip("Enter your name");
      } // Fl_Input* NameIn
      { BirthdayIn = new Fl_Input(72, 235, 175, 24, "Birthday:");
        BirthdayIn->tooltip("Birthday dd/mm/yyyy");
      } // Fl_Input* BirthdayIn
      { PasswordIn = new Fl_Input(345, 196, 175, 24, "Password:");
        PasswordIn->tooltip("six caracters");
      } // Fl_Input* PasswordIn
      { MoneyIn = new Fl_Value_Input(345, 236, 175, 24, "Money");
      } // Fl_Value_Input* MoneyIn
      { FinanceHorizonIn = new Fl_Value_Input(235, 276, 110, 23, "Finance Horizon");
        FinanceHorizonIn->tooltip("How many months you want to save money");
      } // Fl_Value_Input* FinanceHorizonIn
      { Fl_Group* o = new Fl_Group(70, 325, 415, 75, "Choose the functionalities you want to use");
        { FinancesCB = new Fl_Check_Button(90, 345, 70, 15, "Finances");
          FinancesCB->down_box(FL_DOWN_BOX);
          FinancesCB->callback((Fl_Callback*)CheckButton_cb, (void*)(1));
        } // Fl_Check_Button* FinancesCB
        { ToDoListCB = new Fl_Check_Button(215, 345, 70, 15, "To do List");
          ToDoListCB->down_box(FL_DOWN_BOX);
          ToDoListCB->callback((Fl_Callback*)CheckButton_cb, (void*)(2));
        } // Fl_Check_Button* ToDoListCB
        { CalendarCB = new Fl_Check_Button(345, 345, 70, 15, "Calendar");
          CalendarCB->down_box(FL_DOWN_BOX);
          CalendarCB->callback((Fl_Callback*)CheckButton_cb, (void*)(3));
        } // Fl_Check_Button* CalendarCB
        o->end();
      } // Fl_Group* o
      o->end();
    } // Fl_Group* o
    { Ok = new Fl_Return_Button(465, 415, 92, 35, "Ok");
      Ok->callback((Fl_Callback*)CAButtonOK_cb);
    } // Fl_Return_Button* Ok
    createaccountwindow->end();
  } // Fl_Double_Window* createaccountwindow
  createaccountwindow->show();
  return createaccountwindow;
}

void ToDoWindow::hide() {
  ToDoWindow->hide();
}

void ToDoWindow::show() {
  ToDoWindow->show();
}

/**
 function that creates the window,
 i put a function to show in the end,
 so i dont need to ask to show in the main file.
*/
Fl_Double_Window* ToDoWindow::make() {
  { ToDoWindow = new Fl_Double_Window(575, 470, "To Do Window");
    ToDoWindow->tooltip("Enter your data");
    ToDoWindow->user_data((void*)(this));
    ToDoWindow->align(Fl_Align(69));
    { Ok = new Fl_Return_Button(465, 415, 92, 35, "Ok");
      Ok->callback((Fl_Callback*)TDWButtonOK_cb);
    } // Fl_Return_Button* Ok
    { Date = new Fl_Input(120, 281, 120, 23, "Date:");
      Date->tooltip("Date you want the iten to be done");
    } // Fl_Input* Date
    { Display = new Fl_Text_Editor(25, 20, 520, 245);
      buff = new Fl_Text_Buffer;
      Display->buffer(buff);
    } // Fl_Text_Editor* Display
    { StatusCB = new Fl_Check_Button(105, 410, 135, 20, "Completed?");
      StatusCB->down_box(FL_DOWN_BOX);
      StatusCB->callback((Fl_Callback*)CheckButton_cb, (void*)(4));
    } // Fl_Check_Button* StatusCB
    { Name = new Fl_Input(120, 314, 120, 23, "Name:");
      Name->tooltip("Person in Charge of the To Do");
    } // Fl_Input* Name
    { Importance = new Fl_Input_Choice(120, 352, 180, 23, "Importance");
      Importance->add("Very Important");
      Importance->add("Important");
      Importance->add("Normal");
      Importance->add("Not Important");
    } // Fl_Input_Choice* Importance
    { Tag = new Fl_Input(375, 282, 120, 23, "Tag");
      Tag->tooltip("Tag, only one tag for now");
    } // Fl_Input* Tag
    { Periocity = new Fl_Input_Choice(375, 312, 180, 23, "Periocity");
      Periocity->tooltip("Set the periocit for this To Do");
      Periocity->add("Once");
      Periocity->add("Weekly");
      Periocity->add("Montly");
      Periocity->add("Yearly");
    } // Fl_Input_Choice* Periocity
    ToDoWindow->end();
    ToDoWindow->resizable(ToDoWindow);
  } // Fl_Double_Window* ToDoWindow
  ToDoWindow->show();
  return ToDoWindow;
}

void PasswordWindow::hide() {
  PasswordWindow->hide();
}

void PasswordWindow::show() {
  PasswordWindow->show();
}

/**
 function that creates the window,
 i put a function to show in the end,
 so i dont need to ask to show in the main file.
*/
Fl_Double_Window* PasswordWindow::make() {
  { PassordWindow = new Fl_Double_Window(455, 235, "Password Manager");
    PassordWindow->tooltip("Enter your data");
    PassordWindow->user_data((void*)(this));
    PassordWindow->align(Fl_Align(69));
    { Ok = new Fl_Return_Button(345, 185, 92, 35, "Ok");
      Ok->callback((Fl_Callback*)PWButtonOK_cb);
    } // Fl_Return_Button* Ok
    { NameChoice = new Fl_Input_Choice(150, 37, 180, 23, "User Name:");
    } // Fl_Input_Choice* NameChoice
    { PasswordInput = new Fl_Input(150, 72, 120, 23, "Password:");
      PasswordInput->tooltip("Tag, only one tag for now");
    } // Fl_Input* PasswordInput
    { CreateUserButton = new Fl_Button(30, 190, 100, 30, "Create User");
      CreateUserButton->callback((Fl_Callback*)CreateAcc_cb);
    } // Fl_Button* CreateUserButton
    PassordWindow->end();
    PassordWindow->resizable(PassordWindow);
  } // Fl_Double_Window* PassordWindow
  PassordWindow->show();
  return PassordWindow;
}
